I I can I think I can confidently say
that you can escape programming a
hundred percent again when it comes to
selecting which one you should learn it
should be sort of reverse engineered
from the role that you want to go for ah
someone's asking me about boot camps
you're not going to want to hear about
my opinion on boot camps six figures I
mean over like total comp is like over
two hundred thousand dollars
in an Azure job so that's why I find it
hard to tell people to not like keep
their options openGPS I've been working for 10 years with
VM store oh VM comma storage only now I
got interested in Cloud which is the
best Target in the cloud without having
to know a lot of programming I don't
like it okay
so let's kind of reverse engineer that
question the programming part if how
much you actually need to program
will
I I can I think I can confidently say
that you can escape programming a
hundred percent
like okay actually maybe not programming
you can't escape code 100
because cloud is all about Automation
and efficiency and you can only achieve
that if you use some type of
you know language whether that be a
programming language or whether that be
uh like a scripting language or maybe
you're using a CLI or using an SDK and
whatnot right
but if we tell you or someone tasks you
to go and create a VM or someone tasks
two people to go and create a virtual
machine one person goes and creates it
in the portal using the UI takes some I
don't know probably like five six
minutes someone just does azvm create
dash dash Resource Group provides that
Dash Dash
um
I don't know like the image and whatnot
and heck they even throw in a dash
generate SSH keys and they can SSH right
after the command into it in less than
30 seconds especially if they use that
Dash no wait parameter
in 30 seconds like you know that's a
multiplier there of efficiency and time
saved so who do you think has a better
opportunity of getting hired someone
who's more efficient or someone who has
to do tasks manually right
so you can't avoid
um scripting
or you can't avoid code but that doesn't
mean that you have to go on and learn a
full like programming language and know
how to build like websites or full
back-ends or micro Services no no roles
like uh like Cloud admin solution
Architects uh devops Engineers sres uh
are very very focused and very skilled
professionals at utilizing Automation
and scripting for the roles but don't
necessarily develop full-on applications
now I will also say that the thing about
most technical roles is that their title
like a devops engineer at one company
might actually be programming full-on
and at a company not at all
so also pay attention to the description
of the role itself and see if it asks
that for you too
but I would say probably a good first
step would be to aim at something like a
cloud admin or Cloud support role and
that gives the exposure to cloud and
then you kind of move up and kind of
figure out which Niche you want to go
for
but Cloud you can escape code that's
kind of what it comes down to for
Success code you have Version Control
you have a monitoring you have
um
cicd so pipelines and whatnot
so infrastructure is code being one of
those practices very important because
again for that same concept you don't
have to go manually clicking about what
you want to go and create for your
application you want that all defined
somewhere because you can use you know
Version Control for that later on you
can share it easily and just like a
bunch of other options right
terraform terraform happens to be one of
the more popular services or I guess
tools to implement infrastructure as
code but there's a bunch of others again
when it comes to selecting which one you
should learn it should be sort of
reverse engineered from the role that
you want to go for and you kind of have
to do research of what roles are
available locally and if you see like I
don't know 10 rules that you're
interested in and then the majority of
them are asking you for terraform learn
terraform if the majority of them are
asking you for
I don't know bicep learn bicep I think
AWS has cloud formation or something
like that
not 100 sure but of the naming for other
clouds but
yeah
that's why it's important to learn
infrastructure as code do you need
Microsoft 365 for being a cloud engineer
in Microsoft Azure I was told yes but
I've never heard about it yet what I
will say is that a lot of
um companies that use through 365 they
they
tend to lean the Hat leaning into having
some sort of azure presence
so if you kind of think of 365 of being
a skill set that will sort of be like a
Gateway into exposure to Azure because
of that then I think that is an
interesting skill set
and something to do there's also a lot
of automation that you can do with 365
like think of like creating users and
accesses and access to specific services
and whatnot like you'll use Powershell
or and or other tools to automate that
kind of thing
so just because it's not specifically
azure
it doesn't mean that it's not Cloud
exposure right I'm getting into WGU
cloud computing I don't know what route
to go either AWS or Azure they have a
combined one that holds both
probably the easiest way to decide is to
just see what's more popular in your
area or maybe give both a try like you
can get free
free
credits when you sign up for a new
account and see which one you like more
that's a good thing about being at the
beginning is like you can you're sort of
figuring out where you want to invest
your knowledge because Cloud what I've
learned is
like when I started learning cloud it
was very specific to Azure functions and
once I became somewhat proficient with
Azure functions it was kind of easy to
learn other services through that
service and I tend to see that
that happens a lot with my Cloud
Learning like and then I I sort of
evolved like a chain of services
um like I learned a lot of Cosmos DB
because of azure functions I learned key
Vault because of functions recently I've
been learning like a lot of bicep
because of deploying functions and just
you know so you see how you kind of sort
of build this web of services that you
end up
um knowing through like one service
but when you're at the very beginning
you're sort of kind of deciding where do
I even start so you kind of have all
these options and wanna
so figuring out like what's the best for
your Market might be a good way or maybe
just downright what you like to do more
what projects would you recommend for
someone getting into devops so the cool
thing about devops is any project will
do because every project will need you
to implement cicd Version Control
monitoring and whatnot not absolutely
every project is going to need
containers and orchestration of course
not but I think at the bare minimum
every project should have Version
Control something like git and GitHub
and then I pipeline something like
GitHub actions and then infrastructures
code so something like terraform
the first project I highly recommend
people do in general for just cloud or
devops is the cloud resume challenge
there are now challenges for that
specific type of project and every
single Cloud I built the one in Azure
and you can find an hour and a half
tutorial on YouTube if you just search
for Azure Cloud resume
so once you have that build all the
devops practices in addition to that
project
and then you can go to I don't know any
other ones off the top of my head
because I created learn to cloud.guide
and there's a project section there and
I just list them there there's a bunch
more there that you can take a look at
but devops is like you don't have to
come up with ideas from scratch
hit your best what are your thoughts on
a six-month Cloud boot camp apparently
the program has made a reputation for
themselves people who have gotten jobs
with no Cloud experience so just from
some context I don't like boot camps
because
from all the research that I've done
they said they seem to be anywhere from
ten thousand dollars to about twenty
thirty thousand dollars
they say that they can teach you all
these things in a certain amount of time
and then there's sort of some like job
guarantee or something like that a lot
of them do a very interesting like oh
you don't pay but we get a portion of
your salary it's just like stuff like
that that I find
I don't know
I just feel like a lot of them sell
dreams and a lot of them have been shown
and proven to uh not actually
you know come through with what they're
promising
um
from the like Creator standpoint I know
a lot of influencers out there will
recommend boot camps but it's because
they get a cut of it
um that's why you'll never see me
recommending those things because I
don't ever want to
put my reputation on something that I
haven't personally gone through
I also think that just boot camps are
ways of like I understand people having
an urgency for wanting to get into Tech
to get a better salary or things or
whatnot buteven if you land a role with the boot
camp or whatnot your ability to be
self-taught is something that you're
going to have to work on at any point
and sort of finding
like how to teach yourself like the
sooner you can do that the better
if people sort of take that initiative
earlier on like once you're in your role
you're going to be able to teach
yourself absolutely anything but I
understand sometimes people need guided
learning and wanna I just don't like
schemes I guess
so
that's why and I truly do believe that
if you go if you have like a year of
support or a year of some sort of
entry-level tech tech role and then you
spend six months just
doing the ultimate sacrifice of just
studying and learning and building that
you can land uh a cloud adjacent role if
not a cloud role entry-level role in
that amount of time
it the caveat is having entry-level
experience but support roles are very
entry level friendly
I know because I did it so and I know
because I know a bunch of other people
did
I'd match I would much rather go through
that approach because you know in your
support role you're still making money
you're not paying right versus you know
getting into 20 30 grand a debt because
of a boot camp
can you give a real life use case of why
we need to use kubernetes when an
applications are dockerized and deployed
in the cloud could you suggest some good
learning resources
can you talk to me a little bit about
the application
so because if you have just
kubernetes is orchestration
so if you have one container one
application it's just one container and
you're not necessarily dealing with
microservices then you don't need
kubernetes
I it there's there's not necessarily A
Hard number but when that that sort of
like updating your containers uh and
sort of maintaining everything in the
state that it needs to be
and then you're talking about stores and
just all these additional components and
whatnot that are part of your containers
that become so sort of hectic to
orchestrate that's when you need to
throw in something like kubernetes
but I recently saw this video
that was called you don't need
kubernetes which I thought was
fascinating and this person was taking
the approach of like there are very
little applications these days that you
can't use serverless for which
I tend to agree
um so just people tend to over
complicate things just because they want
to have containers just because they
want to have
um
kubernetes just I don't know for
whatever reason big Tech can afford it
because you know infinite amount of
money they can throw money at containers
and kubernetes and whatnot but with
Cloud there's all these other services
that you could take that are meant for
you to sort of
work sort of in a consumption
model so like why not I've seen way more
AWS related jobs and I've seen Azure
that are out there but it's not nearly
the same amount people tend to say that
a lot
um like yeah you're not going to find an
Azure job but here I am making six
figures I mean over like total comp is
like over two hundred thousand dollars
in an Azure job so that's why I find it
hard to tell people to not like keep
their options open
and even before I was working on
Microsoft
I was working at an Azure shop
that was making 55k 75k and whatnot so
they are out there absolutely and you
might happen to be in an area where that
is just the demand is just Azure the
demand is gcp the demand is Oracle the
demand it's like what not so blatantly
telling someone you have to learn AWS
it's not the best advice the best advice
that I give is go and do the research
put in the work to understand what your
Market looks like or if you're looking
more for remote jobs and like go and
look for the rules that you're
interested in and then use that
description as sort of like yours your
study guide and kind of reverse engineer
what you need to learn from there uh
what were the middle rule between
service desk and devops solution
architect okay so first of all you put
devops slash solution architect those
are completely different roles
completely different roles and I don't
think solution architect is a very
entry-level role for entry level
friendly role so you got to First figure
out what your the actual next step for
you you want to be
I I pretty much tell people service desk
so support then goes this admin Network
admin or something like that
um and the goal is to kind of increase
the role and the exposure that you have
to Cloud a lot of roles that give you
exposure to Cloud won't necessarily have
cloud in the title so pay attention more
to descriptions As you move up in your
career and you can specialize and become
more and more Niche then you know you
know then you're going to end up with a
title like Cloud devsec MLL ml Ops or
whatnot and whatnot but that doesn't
start when you're kind of you know you
don't have that when you're getting
started and one so it's more about that
description and whatnot
um
yeah so if you kind of think of it if
like the more I can do automation the
closer I get to cloud in a way
um says admins do a lot of that that
would be a good sort of Middle Ground
between support and then cloud or devops
GPS you have any laptop recommendations
if I want to start learning using Linux
uh yeah so I would say first of all you
probably don't need a new laptop just to
venture into Linux if later on you want
to make Linux like your main machine
your main operating system then yeah
absolutely but you can do things like if
you have a Windows laptop and there are
some requirements that this laptop needs
to meet but you can go and you know do
your research on that but you can use
something like WSL and you'll have not a
native Linux experience but you'll have
something that's close enough that I
think is to start learning Linux you
could also have like virtual machines uh
things like parallels or virtual blocks
where you can have like a virtual
version of Linux on your machine you can
also deploy a VM into the cloud some
free tiers will allow you to use up to
certain amount of time
uh for VM so I would say first give that
a shot if then you're fully fully
convinced I mean there's so many laptops
out there like the my favorite all-time
laptop that I use Linux on was this
laptop called the HP omen
and I remember I and I used to use that
as I think I had like dual booted so I
would have Windows and Linux on that
and I would game on that I used to
stream on that do you all I don't know
if anyone's been watching my channel but
like when I first started I used to like
play Tony Hawk I would do these like
Cloud these kind of sessions right but I
would play Tony Hawk while answering
those questions
um
and I would have like two people
watching but the the impressive thing
was like this laptop was capable of
having that and it had like a 1660 TI
and it was like a great machine and I
think I paid like a hundred a thousand
USD for it so the value in the capacity
was so great and then eventually I
turned it into a full just I used pop OS
on it what I'm trying to say is like you
don't need a super powerful laptop to
run any kind of Linux OS that you want
on it so there's so many options out
there currently in it support specialist
too hold Linux LPI
uh oh that's that's my favorite
certification of all time the Linux the
Linux Essentials AWS CCP build-based
project was the ec2 VPC Lambda terraform
should I shoot straight to devops
engineer or more a junior collateral
I've been working to help This 1.2 years
help me okay so
just to straight up answer your question
should I shoot straight for devops in
general more of a junior shoot for any
role so if you meet if you feel like you
meet 50 of the requirements go okay that
should answer your question now in terms
of the way you're speaking about your
skill set you're saying that you've
built basic projects with ec2 VPC Lambda
and terraform make sure when you do get
these like interviews that you're not
speaking to them in that way that you're
speaking in end results right it's more
so like I built an automation system
that does this and then you can dive
into the details but if you're just
telling me like oh I built a project
with easy two well that literally just
says all you've been all you use is
virtual machines like I don't really
know much more of your skill set than
that right
um I have a video on my channel that's
called the serverless project that got
me promoted and I sort of talk a little
bit more so like the people who hire you
the people who promote you
uh aren't always the ones who have like
the most technical knowledge or
generally they just don't really care
necessarily about the individual's skill
set it's more so like results and like
what like you can produce and whatnot so
if you can speak to them about your
technical skill set in a way that sort
of really resonates with them then
that's when you get that connection of
like oh this is someone that we should
continue to look into for this
interviewing process so make sure you
you know tailor your resume tailor your
cover letter and then you're also
practicing those interviewing skills and
being able to speak to your projects is
very very important