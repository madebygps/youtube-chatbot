{
  "id": "CqNomY7cKg4",
  "title": "Ace Your Cloud Interview: Differences between Fault Tolerance and High Availability",
  "transcript": "High availability and fault tolerance\nboth use redundancy and services that\nImplement redundancy\nto help you achieve\nThe Continuous functioning of your\narchitecture right but they're\nimplemented in different ways they have\ndifferent objectives\nand of course different complexities and\ndifferent costs because obviously when\nsomething is more complex it's going to\ncost you more\nbut we can summarize this in one line\nI'm going to actually use some diagrams\nto explain the concepts and then at the\nend they'll give you the one line\nsummary but let's let's dive in and talk\na little bit more about each one of\nthese Concepts with all that being said\nhi I'm GPS I do Cloud things at\nMicrosoft here on YouTube don't forget\nto like And subscribe so I can keep\nmaking all this awesome free content and\nwelcome to a new video the objective of\nhigh availability is to minimize\ndowntime and provide seamless experience\nto users it uses an active passive\nconfiguration\nless complex which also means less\nexpensive okay\nand we are not aiming for a hundred\npercent uptime because that's not\nachievable with high availability\nwhen we take a look at fault tolerance\nwe'll we'll talk a little bit more about\nthat\nand again just keep in mind it's\nminimized downtime right\nso for example here we have an\narchitecture in the east us2 region\necos2 has three availability zones but\nwe're utilizing easy one here\nand I have a pretty much a duplicate of\nthat architecture also an easy two but\nyou can see it's grayed out because\nthese are components on standby and this\nis what we mean when we talk about an\nactive passive configuration we have our\nactive configuration and our passive\nconfiguration that kicks in\nif we were to experience or fall an easy\none\nso you see we have a load balancer\nDistributing to our web tier and then a\nload balancer Distributing to our our\ndata tier\nso in the case of high availability\nwhat happens well when a fault occurs we\nhave again that architecture but there's\na switch\nand now our active configuration becomes\nwhat was passive previously so our az2\nkicks in and our az1 becomes the\nunhealthy components so feeling needs to\nkick in maybe using a skill set it needs\nto add more instances whatever in the\narchitecture needs to do to put itself\nin a healthy State again and then it\nbecomes the passive configuration and\nthen if you need to do the switch again\nthen you'll do the switch again\nbut the key here is within that time\nwhere there's a switch there is going to\nbe downtime\nbut the objective is to minimize the\ndowntime\nso I'll deal your architect your\ncomponents in a way where that downtime\nyou can achieve 99 points\nof 0 or 9 or 999 whatever you can\nbecause you know you have slas to to\nmeet with your clients okay\nbut that that switch is what is the key\nwhen it comes to high availability\nokay so if we switch intofault tolerance well what is the\nobjective here\nthe objective with fault tolerance is to\nmaintain correct functionality in the\npresence of component failures right\nso it uses an active active\nconfiguration no longer active passive\nactive active more complex which also\nmeans more expensive\nI also have a diagram here and we can\ntake a look we can already see this is a\nlot more complex we're utilizing all\nthree availability zones available to us\nin Azure East us2 we have az1 az2 and\naz3 essentially replicated architecture\nacross all these availability zones and\nwe have traffic that's being distributed\nI probably should have added a let me\nsee here\num\nanotherload balancer\nprobably would have been somewhere here\nso if we move\nthis higher up probably would have been\nsomething here right\nso you're you know you have 100 of your\ntraffic being distributed amongst these\nthree different availability zones\nwithin your region if for some reason\nhere this would turn into\nlike if this were to stop working so\nwe'll just actually use a pencil like if\nthis were to stop working then load\nbalancer would know okay now I can\ndistribute the traffic in az1 and az2\nand there would be no down time there\nbecause the architecture to take care of\nthat and handle that load is still in\nplace and it still works so ideally your\nyour architecture deployed in easy one\ncould handle 100 while your az2 and az3\ncome back up or maybe az2 is down easy\none and az3 are available\nwell one of your architectures would be\nneed to be resilient and redundant\nenough to take care of that\nuntil it kicks back in\nnow let's move actually over here right\nso that's what I'm explaining here so\nerror detection picks up the faults and\nthen the traffic is divided between the\navailable infrastructures in this case\neasy one and az2 and then self-healing\nkicks in to put this\navailability zone or the infrastructure\nin here back into a place where it's\nhealthy and then the the load balancer\ncan come and say like oh okay the health\nchecks will tell the little balancer are\nlike oh this this availability Zone the\narchitecture in here is available to now\npick up\ntraffic once again\nbut obviously you can tell like between\nthe complexities just by looking at\nthe diagrams themselves that this\ncompared to this there's a lot more\ngoing on here\nessentially you end up with well more\nthan one instances of your architecture\nthat are active\nso it's not necessarily that you're\npaying three times as much\nit could end up being that but the fact\nis it's just going to be more expensive\nso keep all on that in mind\nbut now you know the differences between\nthese two okay so one line summary\nso you can really sound like you know\nwhat you're talking about would be\nhighly available systems switch to\nbackup resources when failures occur\nfault tolerance systems continue\nfunctioning without requiring a switch\nkeep that in mind and it makes sense\nlike we saw in the diagram you have an\nactive passive configuration when it\ncomes to high availability and when it\ncomes to fault tolerance you have an\nactive active configuration right\nbecause there's no switch there\nlet me know what other Concepts you want\nus to talk about clear up\nI hope you learned something and I'll\nsee you in the next one",
  "key_phrases": [
    "three different availability zones",
    "awesome free content",
    "hundred percent uptime",
    "three availability zones",
    "one line summary",
    "east us2 region",
    "active passive configuration",
    "active configuration",
    "different ways",
    "different objectives",
    "different complexities",
    "different costs",
    "High availability",
    "Continuous functioning",
    "Cloud things",
    "new video",
    "seamless experience",
    "web tier",
    "data tier",
    "skill set",
    "healthy State",
    "correct functionality",
    "component failures",
    "error detection",
    "available infrastructures",
    "health checks",
    "easy one",
    "little balancer",
    "fault tolerance",
    "Implement redundancy",
    "load balancer",
    "unhealthy components",
    "az1 az2",
    "services",
    "architecture",
    "course",
    "something",
    "diagrams",
    "concepts",
    "GPS",
    "Microsoft",
    "YouTube",
    "downtime",
    "users",
    "okay",
    "look",
    "mind",
    "example",
    "ecos2",
    "duplicate",
    "standby",
    "case",
    "switch",
    "instances",
    "key",
    "99 points",
    "slas",
    "clients",
    "presence",
    "Azure",
    "az3",
    "traffic",
    "reason",
    "pencil",
    "care",
    "place",
    "faults",
    "active active configuration right",
    "active passive configuration",
    "highly available systems",
    "one line summary",
    "fault tolerance systems",
    "one instances",
    "next one",
    "backup resources",
    "high availability",
    "other Concepts",
    "complexities",
    "diagrams",
    "architecture",
    "fact",
    "mind",
    "differences",
    "failures",
    "switch",
    "sense",
    "something"
  ]
}