{
  "id": "mxVq2DlPDWw",
  "title": "You NEED Linux for Cloud",
  "transcript": "I will always recommend a foundation in\nLinux to anyone who wants to get into a\ncloud engineering discipline but I\nrealize that understanding why Linux\nmatters or what exactly it means to have\na Linux skill set is difficult for\nbeginners when you don't have the sort\nof experience in a production role or\nactually just working uh in cloud and\nwhatnot so I'm going to try to show a\ncouple of examples of what I mean with\nlike oh you should be comfortable with\nLinux or most people say that they're\nreally just talking about like bash but\nI'll I'll speak more of this in in the\nvideo right so with all that being said\nhi I'm GPS and I do Cloud things at\nMicrosoft here on YouTube don't forget\nto like And subscribe so I don't have to\nsell uh you know 10 eBooks on Twitter uh\nand welcome to a new video all right so\nI'm in Microsoft learn which I love\nusing for workshops and demos and just\noverall encouraging new people to get\nHands-On with Azure because it actually\nProvisions a an environment in Azure for\nyou and you have a full-on cloud show\nhere uh and you don't have to pay for\nanything you are learning on Microsoft's\ntime the one that we're using\nspecifically today is secure and isolate\naccess Azure Resources by using network\nsecurity groups and service endpoints\nand actually highly recommend you go\nthrough this it takes about an hour but\nI would recommend you go through it do\nthe exercises do the first one and the\nsecond one in order because you have to\nthey build on each other and then go\nthrough another round and take some\nnotes and if you want to blog about a\nBlog about it if you want to sort of\nbuild further on this exercise going\nimplement it in your own environment\nmaybe create some infrastructure as code\nfiles for it you know there's a bunch of\nthings that you can add and improve into\nit maybe go ahead and deploy an app and\nsome actual data to the data in actual\ndatabase of the data server and whatnot\nbut this is a very common development\ninfrastructure and Cloud so the sooner\nyou get Hands-On and sort of building\nsomething like that the better and you\ncan do it all within this uh exercise\nhere so I highly recommend you check it\nout and also you get uh 10 send boxes\nper day and about an hour I think it's\nan hour for each sandbox so that's 10\nhours of learning I don't think anyone\nwould do that every single day but you\ncan if you wanted to so do go check it\nout I'll have it linked in the\ndescription and the other reason I'm\nusing this one is because I've actually\ngone through it and I don't really like\nto speak to things that I haven't\nactually used so that I can say I highly\nrecommend it and give it a 10 over 10.\nokay cool\num so like I mentioned the exercise\nitself doesn't really matter I kind of\nwant to just showcase a little bit of\nlike commands and and sort of how the\nwhat does it actually mean to oh become\ncomfortable with Linux before getting\ninto Cloud require it so even without\ndoing anything let's take a look at what\nwe've got going on here at the left\nwe're in a shell we're in a cloud shell\nspecific to Azure a a when we think of\nlike scripting we think of bash we think\nof Linux we think of automation all\nthese things are are done via cli's\nclis are text-based programs that allow\nus to use commands to work with a\ncomputer work with a server\nevery single service out there is going\nto have a CLI in terms of cloud maybe\nnot every single but the majority so\nthere's either clis or sdks sdks are\nusing programming languages to interact\nwith a cloud service Cloud platform\ncli's are using scripting languages and\ncommands to interact with\nCloud platforms and services and whatnot\nso we're already looking here we see\nblack screen and um you know in this\ncase green I think it's white text too\nright uh clear yeah white text there\ncool\nso if you have never worked with\nsomething like this then you already\nknow that you gotta go brush up and like\ndive into Linux and whatnot\num so yeah so I'm gonna just copy a\ncouple of of\ncommands that are in this this tutorial\nand\nuh I'll kind of will explain as as I go\nuh like what are things that you should\nbe familiar with right so this first one\nhere is already something that you\nshould be familiar with so when it comes\nto scripting and and\n[Music]\num sort of typing out commands if you\never have like a really long value like\nfor example we have here on the right\nside uh we don't ever want to have to\ntype this out manually right like never\nknow because first of all no one's ever\ngoing to remember that\nbut this is where variables come into so\nhere what we're saying is okay\nshell or I want you to grab this value\nhere that I'm never going to remember\nand save it into a variable called r g\nthis one here so what does this mean\nwell this means that the next time I\nwant to use RG so I can use Echo to\nprint out the value of a variable RG\nit's going to actually return that\nfull-on thing value here right so I\ndon't have to remember this anymore and\nthis is something you become familiar\nwith when you develop that Linux skill\nset right that automation skill set that\nbash skill set that I'm sort of using\nthem\num interchangeably though depending on\nthe context they can't be but in this\ncontext I feel like it fits right so\nthat's already a skill set that you need\nto know there\nnow oh here's actually one being used\nright and if I do control shift V there\nwe go\nwe can see that uh let me zoom in\nactually a little bit more here and so\nwe can talk a little bit about a couple\nof things going on here\num so right away that value right here\nis being used a dollar sign means uh\nthis actually we're calling a variable\nhere remember we saved that learn dash\ndash number Dash like you see I don't\neven remember now uh into this variable\nbut I do remember RG so it makes it a\nlot easier for me to continue working\nwith commands when you know that value I\ndon't have to remember it and we're\ngoing to be utilizing it in this command\nso uh what else is going on here well uh\nyou can see that all the commands that\nI'm using with Azure specific to the\nAzure CLI are going to start with a z\nand these prefixes are established by\nthe clis themselves whoever develops the\nCLI is the teams and whatnot so for\nexample I know like the Azure static web\napps uses SWA so all the commands that\nyou're going to run are going to start\nwith SWA like the Azure function CLI\nuses Funk\nthe Azure developer CLI uses azd and\nwhatnot so that's why this always starts\nwith easy and the more you use more\ncli's and more cli's the more you'll\nsort of start to remember like oh I want\nto do this in Azure after you start with\nthis I know that the more I use you know\nand the other one you're like okay\nthey'll have to start with different\nprefixes and whatnot following that we\nhave another command Network bnet create\num and then I'm going to show you how\nyou can actually know the list of all\nthese things here too but you can see a\ndifference between like for example the\nuse of this network command and then we\nsee here a dash dash well what is that\nright well these are what we call\nparameters or flags and parameters and\nflags are used in combination with\ncommands to manipulate what you are\nsending or what is getting returned to\nwhatever it is that you're interacting\nwith so in this case the AZ Network\nv-net create I'm creating a virtual\nNetwork and Azure and I'm assigning a\nbunch of parameters here so for example\nI'm saying I want it to be created in\nthis Resource Group I wanted to have\nthis name Erp servers I wanted to have\nthis address prefix and then I want to\nhave one the subnet because by default\nevery virtual network has to have a\nsubnet if you don't provide the name and\nprefixes one a default one will be\ncreated for you so I want the subnet\nname to be called applications and the\nprefix is to be this address here or\nthis range here\nand whatnot right uh but again you will\nknow and learn more parameters that you\nwill want to send like the right\ncombinations to the correct commands as\nyou use these more and more so if you\nare following a tutorial that's like a\ngraphical one so for example if you are\ncreating a vena in the portal I would\nrecommend it instead like okay go\nthrough that but go and find the\nequivalent to that in acli so for\nexample this would probably take me I\ndon't know three four minutes uh to\ncreate in the portal whereas you know\ntyping out this command is maybe a\ncouple of seconds right uh so yeah I\nthink I already did this so I'm not\ngoing to run it again uh actually can I\njust do clear yeah perfect clear\num cool\nso that those parameters and those flags\nwill manipulate what goes to the CLI and\nI in this case what goes to Azure but\nalso what can be returned from Azure\nright so for example in in uh a use case\nfor\nlike manipulating what is returned to\nyou from Azure is something like\nquerying like Json data uh so there's\nthis example here here so for example\nuh let's say I want to look at all the\nvirtual machines that I have in my uh\nthis current Azure development\nenvironment so we can use azvm list\nright but uh clys tend to use Json for\nthis type of information but Json is\ngreat for computers to communicate with\nother computers but it's not really the\nbest for humans\nto look at all right so for example\nlet's say uh this this command here is\ntrying to get me to figure out if the\nVMS that I actually have in my\nsubscription are running the\nprovisioning state of them or the power\nState actually\nor power State and provisioning State\nbut if I look at this I'd have to scroll\nI had to look know what I'm looking for\nand whatnot uh and yes as you do these\nmore and more you'll kind of know what\nyou want to look for but you never want\nto be in a situation where you want to\nscroll so manipulating output is another\nskill set that you get with you know\nscripting and Bash and whatnot because\nthere are things like the AWA the awk\ncommand there are things like the grip\ncommand and whatnot that are all about\nmanipulating there's things like\npipeline pipelines and piping and\nredirection and all these kinds of\nthings that are all about manipulating\nwhat is being returned to you so in this\ncase it is using this command\nuh the azvm list which I just showed you\nthat lists all the information about our\nvirtual machines uh we're telling it\nspecifically to show details so this\nwill show additional details that by\ndefault are hidden and the key here is\nreally this parameter that says query\nbecause this allows us to use James path\nto create the Json that is returned to\nus James path is something that the\nmajority of class CLI is uh enable you\nto use for like a query uh and it's very\nvery helpful it's actually the language\nthat you're supposed to be using I guess\nD tool not necessarily language to go\nand query Json information\nso if I send this command here you'll\nsee I get a nice and lovely and easy to\nread table with three columns name\nprovisioned and Power\nthis um\nthese columns are provided by here like\nso I have a name column find the\nproperty name assign it here provisioned\nfind the property provisioning State and\nassign it to this column and then power\nState and find that value and then put\nit in power and then output table is\nwhat puts it in this table but you could\neasily do like depending on what you\nneed like if you remove the output table\nyou would have just Json returned but\nit's simplified right because it's\nfiltered and then you could also have\nlike if you wanted to assign this to a\nvariable you could do T this tsv and\nthat removes the formatting and then you\nsee you just have these individuals and\nthis would be easier for you to assign\nto a variable if you needed to or if you\nneeded to get this output and then sort\nof redirect it to somewhere else like\nthis might be well more straightforward\nfor you as well but also understanding\nhow to manipulate when to manipulate oh\nwhere do I save it to a table what do I\nname these columns like how do I\nactually find this information and\nwhatnot how do I query this information\nis also something that you develop with\na Linux skill set now\nthere are more things that I could\nprobably do like a part two because this\none is getting a little long but uh\nthese are kind of like some Basics so\nreally the key is just very very coming\nvery very comfortable with the CLI the\nway that uh any kind of service that you\nwant to interact with uh in Azure like\nyou'll know how to do it you may not\nhave things memorized but you kind of\nhave a feel for how acli works so you\nkind of know how to get to it you just\nneed to know the specifics like actually\nlet's switch back to the screen because\nI want to show you one last thing\nanother important thing whoops another\nimportant thing here is to understand\nhow you can find help which is a very\nbig thing like bass and we'll have like\nthe Man pages which is short for manual\npages so if you do AZ help you'll see\nthat it'll tell us okay\num sort of there's like a bunch of\ncommands it's like essentially\ndocumentation built into it right and if\nyou say all right you know you want to\nwork with azvm which is the virtual\nmachine command you can do Dash help\nhere and it'll give you a list of\ncommands and parameters that are\nspecific to the azvm and say I know that\nI want to work with azv um I don't know\num let's say create\nso if I do a z v m create a and then\nthen I don't really know what else I can\ndo here what options I can provide well\nI can do Dash help append that to that\nvery end and all this help here is being\nreturned to me is specific to that\ncommand itself right so again\njust knowing how to work with them\nbecoming comfortable with one and\nknowing how to find help and how to find\nthe options that you can and\ncan use will one comes with experience\nbut also just by trying these things and\nLinux is all about that\num so anyway I hope this provides a\nlittle bit more clarification of what it\nmeans to hey I need a Linux kill set for\nuh to get into cloud and whatnot it's\nnot hard and I find it extremely fun\nbecoming powerful and efficient with a\nCLI will unlock many opportunities and\noverall I just I feel like it's to me\nit's fun I feel like cli's are like art\nin some way anyway that's it for this\nvideo I'll see the next one",
  "key_phrases": [
    "cloud service Cloud platform",
    "cloud engineering discipline",
    "common development infrastructure",
    "Linux skill set",
    "service endpoints",
    "single service",
    "cloud show",
    "Cloud platforms",
    "production role",
    "most people",
    "new people",
    "security groups",
    "actual database",
    "other reason",
    "little bit",
    "text-based programs",
    "computer work",
    "programming languages",
    "scripting languages",
    "black screen",
    "white text",
    "new video",
    "first one",
    "long value",
    "variable RG",
    "thing value",
    "cloud shell",
    "Cloud things",
    "Azure Resources",
    "data server",
    "foundation",
    "matters",
    "beginners",
    "sort",
    "experience",
    "couple",
    "examples",
    "bash",
    "GPS",
    "Microsoft",
    "YouTube",
    "10 eBooks",
    "Twitter",
    "workshops",
    "demos",
    "Provisions",
    "environment",
    "network",
    "hour",
    "exercises",
    "order",
    "round",
    "notes",
    "Blog",
    "code",
    "files",
    "bunch",
    "app",
    "Hands",
    "something",
    "uh",
    "boxes",
    "day",
    "sandbox",
    "learning",
    "description",
    "commands",
    "left",
    "automation",
    "cli",
    "terms",
    "majority",
    "sdks",
    "services",
    "case",
    "tutorial",
    "right",
    "Music",
    "side",
    "variables",
    "Echo",
    "Azure static web apps",
    "current Azure development environment",
    "three four minutes",
    "Azure function CLI",
    "Azure developer CLI",
    "command Network bnet",
    "bash skill set",
    "Linux skill",
    "automation skill",
    "AZ Network",
    "virtual Network",
    "dollar sign",
    "dash number",
    "other one",
    "dash dash",
    "Resource Group",
    "Erp servers",
    "right combinations",
    "virtual machines",
    "pipeline pipelines",
    "provisioning state",
    "power State",
    "Azure CLI",
    "network command",
    "azvm list",
    "other computers",
    "Json data",
    "correct commands",
    "address prefix",
    "use case",
    "subnet name",
    "context",
    "control",
    "couple",
    "things",
    "value",
    "variable",
    "prefixes",
    "clis",
    "teams",
    "example",
    "SWA",
    "Funk",
    "azd",
    "different",
    "difference",
    "parameters",
    "flags",
    "bunch",
    "default",
    "range",
    "tutorial",
    "vena",
    "portal",
    "acli",
    "seconds",
    "cool",
    "something",
    "uh",
    "clys",
    "type",
    "information",
    "humans",
    "VMS",
    "subscription",
    "situation",
    "scroll",
    "output",
    "scripting",
    "AWA",
    "grip",
    "one last thing",
    "Linux skill set",
    "property provisioning State",
    "virtual machine command",
    "three columns name",
    "property name",
    "virtual machines",
    "important thing",
    "big thing",
    "James path",
    "D tool",
    "Man pages",
    "manual pages",
    "z v",
    "little bit",
    "Linux kill",
    "many opportunities",
    "name column",
    "additional details",
    "class CLI",
    "output table",
    "azvm list",
    "Dash help",
    "Json information",
    "piping",
    "redirection",
    "kinds",
    "things",
    "case",
    "default",
    "key",
    "parameter",
    "query",
    "something",
    "majority",
    "language",
    "nice",
    "Power",
    "value",
    "variable",
    "tsv",
    "formatting",
    "individuals",
    "part",
    "Basics",
    "service",
    "uh",
    "Azure",
    "feel",
    "acli",
    "specifics",
    "screen",
    "bass",
    "bunch",
    "commands",
    "documentation",
    "work",
    "options",
    "end",
    "experience",
    "clarification",
    "cloud",
    "way",
    "video",
    "next"
  ]
}