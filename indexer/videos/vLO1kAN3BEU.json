{
  "id": "vLO1kAN3BEU",
  "title": "I Use GPT4 To Implement Terraform in My Cloud Project",
  "transcript": "oh you know what I got to do you know\nwhat I you know what I gotta enable for\nsure I gotta enable co-pilot let's\nreload this the co-pilot is just\nbeautiful love it love it so gpd4 let's\nask how can I deploy in Azure function\nto azure\non a Linux consumption plan with\nterraform\nlet's see what it says here oh I should\nI should have put\nI should have put that it's dot net so\nwhenever I learned something new in\ncloud or in Tech in general I never\nlearned it from scratch\num and I think the more you learn Cloud\nthe less you're gonna have to learn\nstuff from scratch so right now the\nassociation pattern is I know Cloud I\nknow bicep I know Azure functions I know\nwhat I fully deployed function has to\nlook like when it's in Azure so the\nmissing part is terraform so okay using\nall that how do I grab terraform and\nlike implement it right\nlook at this y'all\nuh uh Linux\ncan I just copy all of this\nlovely open this up clear\nCDs Claireand I wonder if he'll do it all\nin one shot\nterraform Dash version or is it Dash\nDash\nnice okay\nensure you have the agency line\ninstalled in your machine\noh yeah I have that and that you are\nsigned into your added account by\nrunning I'm pretty sure I'm I'm pretty\nsure\neasy account show Dash Dash\nquery\nI think it's just name\nOkay cool so I'm set to the right one\nthere what else I gotta do\nuh create a terraform configuration file\ncreate a new directory for your\nterraform configuration files and\nnavigate to it create a new file name\nmain.tf all right that's it that's what\nthis first step right there\nlet's go into here\nuh where are we here\nuh CD infra and then we'll do\nuh no code main.tfhere we goextension has search Market let's see\nwhat extensions they have yeplet's let's do this also just to preface\neverything I I have never used terraform\never so this like I'm gonna make a lot\nof mistakes but I want to embrace\nthat how can I deploy an Azure function\non Lexus country plan no and Azure eight\nso we can put here dot net oh come on\ndot net seven\nout of process Azure function let's be\nmore we'll be more specific there okay\nlook at me I'm gonna be a devops\nengineer in no timethis is probably not right\nalso this is this doesn't seem like it's\ndone it like stopped it's like stopped\ngenerating\nbut for now we can copy copy this code\nhereso\nso we're gonna.net I know so I know for\na fact this needs to be done it isolated\njust I know that because I've deployed\nthis so many times with umwith other tools\nalready so let's look through this let's\nlook through this\nlet's look through what it generated us\nokay provider Azure RM I know a\nterraform uses providers\num as in like that's where it gets gonna\nget deployed\nrightI don't want to use up my tokens for\ngpt4 so let's go to Bing let's go to\nBing chat what is a provider\nand tear okay you're you're gonna\nrespond to meuh\nuh in terraforma providers a plug-in\nthat allows users to manage an external\nAPI okay it acts as a translation layer\nthat allows terraform to communicate\nwith many different Cloud providers\ndatabases and services all right so it's\nlike sinceriform is cloud agnostic you\ngot to kind of tell it what to work what\nto work with right cool cool cool so\nthat makes sense resource\nAzure RM underscore Resource Group okay\nso this is\nexample\nresource\nuh\nuh resource okay so okay okay okay\nso we're creating a resource of type\nAzure RM Resource Group and I'm assuming\nthis is the name but we're going to call\nthis uh\ntimestamper API Dash resource actually\nno hold on usually and I'm sure this\nneeds to be abstracted into some kind of\nvariable or per parameters or something\nlike that but for right now we're just\ngoing to leave here uh the my preference\nis to always do RG Dash so for resource\ngroups some people do RG at the end but\nI do RG at the beginning because that's\njust what works for me okay\nand I don't want West Europe as my\nlocation I want east east\nus2 name hold on no\nexample name what's the difference\nbetween this\nand this or are these the same this here\nokay okay okay okay hold on no I get it\nI get it now\nI get it\nthis name is the name within the\nterraform file right the referencing yes\nso if I need to reference it in the rest\nof the file that's the name this name is\nactually what is going to be set as the\nname in Azure all right so this needs to\nbe RG so in this case and I can probably\njust call this\nResource Group name or maybe just a\nresource Group\nthat's fine okay cool\nso next we have here I'm just going to\ncall this first of all storage account\nstorage account because we already know\nthis is a reference name right Azure RM\nsearch account name we're going to call\nthis\ntimestamper API store that might be a\nlittle too long Resource Group name uh\nthis is not example anymore this is\nResource Group oops\nResource Group\ndot name\nand then location would be Resource\nGroup\nuh location oh no this is wrong hold on\nwait Resource Group name restrict\nlocation you see us okay cool\naccount to your standard lrs perfectresource\nAzure RM app service plan okay we'll\ncall this app service plan\nand we're going to call this timestamper\nStamper APIplan there I don't know if hyphens are\nallowed in plan names so we'll just\nleave it like that for now the location\nwould be research group\nDash no come on\nresearch group Resource Group name which\nis Group location kind function app\nuh Reserve true okay so also skus so\nagain remember I mentioned it's going to\nbe easier for me\nit's going to be easier for me to\nto learn something like terraform given\nthat I already have the context of what\nlike what a deployed function looks like\nhow to deploy a function to Azure using\nother Technologies like bicep right so\nin this case it's telling us okay what\nSKU do we need here\nwell I know it has to be dynamic and of\ntype y1 because in bicep you also have\nto Define it this way as well right so\nboom cool\nthis is lovely like GPT generated all\nthis now it's gonna work that's another\nquestion but we're we're walking through\nthis step by step okay uh I don't know\nif y'all I share this on my Community\npage but what we're doing is I have this\nthis application here that will I\nprovided a YouTube URL and it provides\nme time stamps you can see on the left\nside here it has like time stamps and\nlike a little summary of what happens\nduring that time\nbut it's just code the code's kind of\nmessy and ideally when you're creating a\ncloud project you want to include cicd\nyou want to include infrastructure as\ncode you want to test it if possible you\nwant to create like some documentation\nso the code and people in the ways\npeople can use it locally is here but\nthere's more stuff I can add now I\nthought there would be a fantastic\nopportunity for me to learn something\nnew like terraform\nI leveraged my existing skill set with\nbicep and Azure and be like okay how do\nI use styrofoam to deploy this and then\nI'll have a project using terraform boom\nokay but I'm not learning from scratch\nAssociation pattern my friends Okay cool\nso that's what I'm doing okay if\nanyone's interested in checking out this\nAPI I'll send it here\nuh all right cool go back here and we're\nback in here okay so let's look at the\nactual function app resource\nuh awesome also thanks I was able to get\na devops offer two months ago coming\nfrom software engineer background\nbecause of your videos that is so\nawesome I am so proud of you thank you\nfor letting me know that\num I'm always super happy to hear when\npeople land the jobs that they want make\nthe moves that they want to make\num so I try I try so hard to like keep\ncreating and keep making this stuff free\nbecause you never know who it's gonna\nhelp so that's awesome\nI think this is good\nso how do I deploy thislet's do terraform Dash helpit says prepare your working directory\nfor other commands well check where the\nconfiguration is valid all right let's\ndo that right tarot form terraform\nvalidate oh no no it's not validate it's\nyeah\nthe configuration requires provider\nregistry but that product is available\nyou may be able to install automatic\nterraforming all right terraform init\nterraforming it y'all\nterraform has successfully been\ninitialized okay\nterraform validate does it work now no\nsomething's up\noh there's another one the Azure RM\nfunction app slot resource has been okay\nso we gotta we gotta replace this toookay so we'll go down here see I had to\nupdate all this GPT code\nso our jobs are safe for now people\nthis is the good news\nI don't know I feel like this is not\ngonna work but we'll see\noh my goodness y'all\nlook at thisso how do we deploy this terraform help\nwe'll see can I do just Dash h\nterraform laga provider refresh show\ntest unite workspace\nuh\nuh plan plan show changes required by\nthe current configuration okay\ncreate or update infrastructure knit\nvalidate okay so next one is to do\nterraform plan\nwhat we're going to do is do AZ group AZ\ngroup list and we'll do an output table\nand we'll see what groups I have just to\nmake sure I do have a Time Stamper group\nbut I don't have a timestamper what am I\ncalling it here I want to make sure okay\nwe're going to call it timestamper API\nokay\nsoit should deploy timestamper API if it's\ncorrect\nokay\nlet's take a look here\nso it says terraform will perform the\nfollowing actions terraform function app\nwill be created\nresource\nall right okay cool let's just do it f\nit\nuh eight wait what was it what was the\nterraform Dash help what was the thing\nto deploy apply\nterraform of play\nterraform apply wait how does it know my\nsubscription how does it know where to\napply it to has no word or deploy I\ndon't think I ever set that up unless it\nuses the context of the Azure CLI which\nwould be nice\nlet's see what happens thoughdo you want to perform these actions\nterraform will perform these action\ndescribed okay so okay so does a does\napply does apply run plan as well that's\ncool if it does do that that's cooluh should take from EnV that's awesome\nthat's cool\nthat's cool that's cool so I know all\nright okay stops getting created y'all\nlet's take a lookthere we go\nnow if it's gonna get created\nsuccessfully I don't know but we'll take\na look here okay\nwe'll just do we'll just do this we'll\njust we'll just output it to the table\nfor now I guess fineokay look at that we got now a function\napp under the Reese the Reese the RG\ntimestamper API that's cool that's good\nlet's see\nit completed all right so let's go to\nAzure now\nthis\nfunction extensions version needs to be\nfour\nfour nice work runtime worker run time\nwork it run time nice\nthis is cool so what I'm going to do\nright now is just do a little a little\nclear this up here\nand then I'm going to do a git add\nand then I'm gonna do a git commit\nand I'm gonna say\ncreated\ninfra files okay then I'm gonna do a\nlittle get pushy\nget push get get push lovely\nand then I'm gonna go to my I'm gonna\nclose Bing I'll need you BingI'm gonna go to my GitHub\nscroll up okay I'm Gonna Go My GitHub\nand wait what happened I need to add in\nthe get ignore to ignore the proper\nfiles from terraform what what do I need\nto add to my get ignore it it get get\nignore file when I'm using terraform\nterraform okay\nso okay\nI'm gonna copy this let's just do that\nand let's add it to the bottom they're\nfrom directory\nno dash\nthis should do it because this is like\nliterally any file without terraform git\nrebase Dash I\ncreate it added infra okay so this is\nthe one that messed everything up right\nlet's see get rebate how do I delete\nthis commit all rightrebase pick reword edit squash fix up\nbreak drop label reset\nso essentially I want yeah I guess I\nwant to delete this this pick reword\nsquash break drop remove commit okay so\nif I say\ndrop right and then I do write out boom\nexitoh my goodness did I lose everything\ncode infra main.tfyeah there we go\nboom oh my goodness I almost lost\nabsolutely everything oh back here here\nwe go okay here we go here we go here we\ngo\nhold on people\nwe're gonna copy this\nthen we're going to paste this in hereand\nwe'll paste that in there so I haven't\nadded anything yet\nso now if we do get at everything\nget commit\nadded infra files\ntwo files change\n89 get push\noh my goodness it worked\nall right let's go back hereand we have an infra folder and we have\nthe main.tf let's go we figured it out\nwe got a lot we got we gotta get my work\ndone y'all we we should we struggled we\nsuffered but we we got this done and and\nmost importantly my streak is still\nstrong\nthere we go look at that look at that\ncontribution graph\ndude\nso since\nFebruary 23rd almost a month out I've\nbeen doing something every single day",
  "key_phrases": [
    "Azure RM app service plan",
    "Azure RM search account name",
    "storage account storage account",
    "sense resource Azure RM",
    "many different Cloud providers",
    "Azure RM Resource Group",
    "timestamper API Dash resource",
    "long Resource Group name",
    "Lexus country plan",
    "timestamper API store",
    "easy account show",
    "Linux consumption plan",
    "right cool cool",
    "Dash Dash query",
    "terraform configuration files",
    "process Azure function",
    "terraform Dash version",
    "new file name",
    "external API",
    "Azure functions",
    "right one",
    "new directory",
    "terraforma providers",
    "example resource",
    "association pattern",
    "missing part",
    "one shot",
    "agency line",
    "first step",
    "devops engineer",
    "other tools",
    "translation layer",
    "West Europe",
    "reference name",
    "standard lrs",
    "terraform file",
    "example name",
    "okay provider",
    "Bing chat",
    "wrong hold",
    "dot name",
    "pilot",
    "something",
    "Tech",
    "scratch",
    "stuff",
    "bicep",
    "CDs",
    "Claireand",
    "machine",
    "code",
    "Market",
    "extensions",
    "mistakes",
    "timethis",
    "fact",
    "tokens",
    "meuh",
    "plug",
    "users",
    "databases",
    "services",
    "sinceriform",
    "type",
    "kind",
    "parameters",
    "preference",
    "people",
    "end",
    "beginning",
    "location",
    "difference",
    "referencing",
    "rest",
    "case",
    "wait",
    "terraform laga provider refresh show test unite workspace",
    "Azure RM function app slot resource",
    "AZ group AZ group list",
    "research group Resource Group name",
    "Group location kind function app",
    "actual function app resource",
    "terraform function app",
    "app service plan",
    "existing skill set",
    "software engineer background",
    "Time Stamper group",
    "terraform Dash helpit",
    "provider registry",
    "Stamper APIplan",
    "terraform help",
    "Azure CLI",
    "plan plan",
    "plan names",
    "terraform plan",
    "run plan",
    "other Technologies",
    "Community page",
    "YouTube URL",
    "time stamps",
    "left side",
    "little summary",
    "scratch Association",
    "devops offer",
    "working directory",
    "other commands",
    "right tarot",
    "right terraform",
    "good news",
    "output table",
    "cloud project",
    "terraform boom",
    "infrastructure knit",
    "current configuration",
    "timestamper API",
    "GPT code",
    "hyphens",
    "something",
    "context",
    "bicep",
    "case",
    "SKU",
    "question",
    "step",
    "application",
    "messy",
    "cicd",
    "documentation",
    "people",
    "ways",
    "stuff",
    "fantastic",
    "opportunity",
    "styrofoam",
    "friends",
    "videos",
    "jobs",
    "moves",
    "product",
    "automatic",
    "goodness",
    "changes",
    "groups",
    "look",
    "actions",
    "play",
    "subscription",
    "word",
    "EnV",
    "four nice work runtime worker run time",
    "function extensions version",
    "squash break drop",
    "function app",
    "drop label",
    "timestamper API",
    "infra folder",
    "contribution graph",
    "infra files",
    "two files",
    "Dash I",
    "rightrebase pick",
    "terraform git",
    "everything code",
    "look",
    "table",
    "Reese",
    "add",
    "commit",
    "push",
    "lovely",
    "Bing",
    "GitHub",
    "proper",
    "bottom",
    "directory",
    "rebate",
    "boom",
    "goodness",
    "people",
    "lot",
    "streak",
    "dude",
    "February",
    "something"
  ]
}