How to get into Tech and Serverless with Linda Nichols Microsoft GBBhi everyone thank you for joining us
today for how to get into tech and
serverless with linda nichols before i
introduce our speakers i want to go over
a few quick things
please take a moment to read our code of
conduct
we ask that you be kind and respectful
to everyone including our speakers we
want the reactor to be a place that
everyone feels welcome
please ask questions using the live
youtube twitch or twitter chat wherever
you are joining us from
um we will be taking questions from
there throughout the presentation and
then in the chat we'll also be sharing
some links that go along with today's
content and some upcoming sessions
this session will be added to our
reactor youtube page in 24 to 48 hours
so if you aren't able to stay for the
whole thing or you want to share it
afterwards you will be able to find it
there
and then finally i will share a link to
our reactor survey if you have a few
minutes we greatly appreciate your
feedback and i am now going to pass it
over to gwenhi everyone how are we doing welcome to
the first live stream for serverless
september
my name is gwen dion thank you for that
amazing introduction as always i am a
cloud developer advocate here at
microsoft
overall a big fan of.net and all things
serverless and like i mentioned
with it being september we're doing a
whole serverless september month best
month of the year if you ask me but i
might be a little biased
and we got a lot we got a lot planned
today we had a great conversation today
but i do want to kick it off by sort of
just introducing you all to some things
that you can get done this month to get
hands-on with serverless first is our
what's it called hack
so
on our microsoft reactor youtube channel
you might have seen this already if
you're subscribed to our channel we have
a whole on-demand series i believe it's
12 videos where we're walking through
where i'm walking through
the what the hack serverless edition
where we're building a full-on
serverless project
what it is it's like this license plate
scanner and it uses computer vision and
cosmos tv and servlets and all these
kinds of things
to
classify license plate photos and
there's a whole series on that you can
get hands-on put it on your resume and
the cool thing about that project is if
you complete it
you can submit your project to our
official repo and then get promoted not
promoted i guess featured on our hall of
fame and then you'll be featured on a
official microsoft repo
which i think is awesome especially if
you're trying to you know find things to
like stand out with or share in social
media and all that kind of stuff all
those kinds of things and whatnot so
i'm going to be sort of showcasing
uh completed solutions and things like
that over the next couple of streams
that we have this month we're gonna have
streams every single thursday for the
month of september right here on the
reactor youtube
and we also have the cloud skills
challenge you may or may not be familiar
with cloud skills challenge essentially
it is
a bunch of microsoft learn modules put
together that have some sort of theme or
you know they're they're they're meant
to follow or teach you some specific
skill set in this case we have one
specific to serverless on azure and we
have drop the link for that as well
in the chat so get hands-on with that
and there's like it's pretty fun because
there's like leaderboards and all these
kinds of things um and yes uh what else
do we have uh there's yeah we dropped
the classical challenge there the
serverless hacks yeah i'm very excited
to see people complete the
the hack
um it took me
quite a while to put that stuff together
and i think that's a good thing because
it's it's a lot more difficult than i
thought it was going to be i have a
couple of years of serverless under my
belt um
no way am i on the level of our guests
but
we'll talk about that in a second
um
but yeah it was a lot harder it wasn't
it's not a walk in the park so it's
great you're gonna learn a couple things
and get something for your resume right
so today we have one of my favorite
people and i'm gonna say this before i
bring her on because she's not gonna
allow me to give me give her the credit
that she deserves but um like two years
ago i think or maybe three years ago i
can't remember exactly
i was listening to this podcast called
serverless chats
and linda who's our guest for today
was on this episode and i remember she
said this line that has just always been
sort of how i i i carry my advocacy
and and i just think about my career and
she said something along the lines of
the amount of lines of code that you
write does not determine how good of an
engineer you are
and i think now that you know we think
of cloud computing and all these
services that abstract a lot of things
and allow us to focus more on our
business logic
this sentiment this statement could you
know it couldn't be
like more important than
right now so with all that being said
i'm gonna bring on
linda nichols one of my favorite people
and has made a massive impact in my
career as well and this is actually our
first time officially talking on
something like this i know which i'm
surprised um but yes welcome thank you
for for for being on here thank you um
this is going to be a great
a great chat
yeah i will yeah no it's the admiration
is mutual um i mean i talk a lot about
durable functions now but the first
durable functions video i watched was
yours
really i was like
what are durable functions like do i
care about this and then i saw some
stuff from jeff holland and then i saw
your video and i was like wait who is
this
and what is this content yeah and then i
think i started going through and liking
all your videos
i'm stalker asked
appreciate the the support it's really
cool to see
like i remember when i started making
those videos and you were one of the
first people who was like very
supportive that was way before i even
thought like joining microsoft and
working here was a possibility and now
just to see where i'm at and it's all
thanks to people have been very
supportive to you which is why i also
wanted you to be on this first
serverless september live stream and and
also we've discussed how we have
somewhat similar journeys into tech
which is another thing i wanted to talk
about but let's let's let's start off by
first you know we're the server
september
i'm saying this word serverless we
should do a game people should like
i don't know keep it tiley of how many
times we say the word serverless but
let's first start by defining serverless
because i feel like
the definition from when i got started
is now kind of different it kind of
evolves i feel like it's something that
changes all the time but i would love to
hear from you how do you define surplus
sure um it's funny because every talk
for the longest time you had to have a
what is serverless slide so you could
just set the stage like this is what i
think it is and then there would be some
sort of fierce debate
um but i used to always say it's about
events
but it's about event driven
architectures you know and that and
that's basically the serverless part of
it i mean but some of it is also just
lots of layers of abstraction and
basically like you don't know anything
about the infrastructure you don't know
anything about the hardware i don't
really like it used to be you only pay
for what you use but i don't feel like
that's necessarily true anymore because
there's all these different pay scales
and things so that's sort of out the
window for me
i it's not fast either which i've always
said that you know serverless is not
one fast product it's architectures it's
event driven
um and so now i think i'm like low i
don't want to say low effort but low
infra
is still
very high
okay okay so for you it's more so it has
to be event driven
and
to some extent you have to not have to
care about the infrastructure right okay
so so what about things like you know
what now we have like serverless
databases and here's an interesting one
serverless containers
i think that is such a because it used
to be such a like serverless versus
containers and now we have
like the sort of like this hybrid
approach
uh and i feel like everything is is is
having some sort of serverless flavor as
well and then you also have things like
low code and no code which some people
classify as serverless which i guess
could be to an extent so how do you feel
about everything being just
getting like the serverless label
slapped onto it yeah i mean
depending on what you mean by low code
that's actually pretty server full
because it's usually like sas products
like power platform so i feel like
that's more server server full
but um yeah like i remember a while back
being on some panel and we were talking
about the features we needed to serve
those platforms and i was like i said we
have to be able to bring our own
container at some point like bring our
own run time and i mean it was like a
record scratched in the back and people
were like
that's not really truly serverless but
it was a need at the time and and i
think that's now happening like so i
think it's like
it me like serverless almost meets you
where you are if i'm like i just want to
take my
tiny piece of code push it somewhere and
forget about it and then it i just
trigger it and it works okay that's
serverless but also if i want to if i
have something running in kubernetes
with cada and i want to trigger that and
i sort of know something about the
kubernetes that's happening okay that's
serverless also
okay and so
but i think if something is a serverless
platform it does tend to be a little
less
infra and it is more like plug and play
push and go and even like container apps
even though we know there's
infrastructure there and we know there's
a container
it's still kind of push and go
it's really it's taking a lot of the the
struggle of of um all the info away from
it okay okay i like i like that
definition i
i'm sure you've seen plenty of changes
from when you got into to serverless and
to where it is now but i want to take it
even
a couple steps back because i'm sure you
didn't start your career as a server
like working with serverless and you
know talking about these things
yeah i'm um yeah uh yeah i'm definitely
old school i mean some of the concepts
are the same but um
you know obviously there was no cloud
when i started like in 1999
um
but i started on my very first tech job
was on a help desk which we've talked
about shout out
because i saw your tweet about it and i
was like shut up i also start on the
help desk this is so cool but yeah i
mean the funny thing about it was
i start you know a lot of people are
like i'm going to start with tech
support i'm going to get on the help
desk because this is a great stepping
stone for my career in tech
but for me i just thought it was a job i
was like this is what i'm gonna do the
rest of my life like there's a potential
i can make thirty thousand dollars doing
this i'm gonna retire
like because you know i was a basically
an art school dropout i had half an art
degree wow i did not know that yeah part
of a bio degree i had no money
and i was like paying for for college
like making drawings and building
computers
okay in like a drawing i'd sell for ten
dollars a computer rebuild i would make
a hundred dollars so i knew math
and i was like okay i think this tech
thing is what i'm gonna do so i got a
certification which i know that you're
also passionate which one
a-plus okay cool cool back then it had
das on it still wow okay cool
yeah so i got that cert
i applied for this job randomly and they
called me in for an interview and
basically i had
had new business giving me this job
they felt like okay you've had like
every you know average job
you know that faces the public your
whole life you know customer service you
have the certification you seem pretty
nice and here's this job and i was like
yes this is i am in tech now this is
what i'm going to do the rest of my life
i'll just be on this help desk
um
but
after about six months i got bored
okay i taught myself out of code and
basically became shadow i.t and then
that was
what
was the first language what did you
teach yourself
well microsoft access and vba
okay okay
yeah
so um i uh i started after i kind of
like started getting into it then i
learned c so c was like my first
official reel whoa do you do any
anything in c now currently no when's
the last time you touched c c
oh like
probably more than 10 years yeah
probably when i went back to school and
actually made things official you know
because i did ultimately finish my
degree and got a master's and
whatnot but once i went back then yeah i
learned c c plus and then i was like
okay now i get it now that i have all
the foundations of it but i was
basically self-taught for a really long
time i did vb6
after i left the helpdesk job my first
programming job was 56.
so did you go back to school for like
computer science
yeah i finished the actually the art
degree and then minored
in it and then to the masters in i.t did
did that make
a difference in roles that you were able
to land after that or was that more sort
of like just something you wanted to
finish it did it did make a difference
but honestly it shouldn't have
okay i didn't i didn't you know i feel
like especially with the master's degree
i learned more about management
i learned more about leadership i think
with you know i i made connections i
made like connections for life in my
master's program
but um and i learned some interesting
things in undergrad but really it was
just there were so many jobs where you
had to have that check box in order to
make a certain pay level and i just i
think i hit a ceiling at some point
where it was like no you can't get that
promotion there you can get that pay
because you don't have this degree
and i was early in career and i felt
like oh okay well this is the rules and
i go do it now i would tell them
okay i'll go get another job i'll go
somewhere else yeah yeah and so if
anyone runs into that
you know feel free to bring me in as
your coach
because now i'm like older and wiser and
i'm like it doesn't actually matter i've
hired
people as a manager with tons of
different backgrounds but yeah that
it's it's interesting it's both
interesting and awesome now how things
are are very different but even though
things are really different i've still
considered and i think i've tweeted
about this and i think you've mentioned
something about this as well but
i still in the back of my head are like
oh someday i'll go and finish because i
have two semesters of my comp sci degree
and i'm like at some point i am going to
finish it i don't know when but i don't
know what it is about maybe it's because
it's like it was such a norm for such a
long time that it's sort of like
embedded in our brains that we have to
do it
um and sort of letting go of that kind
of like way of thinking is tough but
i'm very glad that things are much
different now uh and you know more
opportunities for more people and
whatnot
but i'm i'm assuming that at some point
after help desk you got some sort of
software engineering or software
developer gig or like what was that
first official gig where you find
yourself coding like every day
yeah i mean the first official job was
upgrading visual basic three to visual
basic six that was my job it was like
some benefits company and they had an
old bb3 app they wanted to go to vb6 and
that was hard was that like it was very
boring okay
and that was when i learned i really
liked more like web development and so i
was doing even on the help desk i had
learned classic asp because that was how
i wanted to make web pages so that
people so so just to back up i rewrote
our help desk software that was my
shadow it project
a while at the help desk yeah well i
think okay okay every day that makes i
was like this is trash i'm rewriting
this
so i also had to make a webpage for it
you know in html and classic asp and
front page and all the old folks are
like oh yeah yeah i remember all that
and um and so then i had to learn kind
of like web development there i had like
actually like a web development for
dummies book that i bought to learn all
this
um so then when i went back to desktop
applications i was like this is kind of
boring i don't really like this
and then um you know from there i kind
of started getting more into into web
development so the next job i was
actually just doing classic asp and more
web dev full time classic asp that's
is that c sharps though like right well
you could it yeah most mostly it was
like vbscript
okay yeah you had you could use like
various scripting languages but vbscript
was i think the most popular one maybe
somebody will disagree
um yeah there was various like scripting
you could do with it and then it was
like and then you know client-side
javascript too so we do a little bit of
client-side javascript for some
okay
so
okay there's many questions i want to
ask here but let's go with this first
one here
so now
and we'll talk about your current role
in a little bit but what's the language
you use the most now javascript
javascript yeah uh-huh so but
when i started to go back to school
i actually switched to java from from
sort of i was in i was i was
transitioning to net and then i think i
was gonna go back to school they had a
java requirement this was for my
master's program and so i was like okay
i need to learn java i learned it i
really liked it i was like i liked like
the structure of it and i and i think
maybe i liked it was a little bit more
like c c plus
so i switched to java
and then i i was an enterprise like java
developer for seven years so i spent a
huge chunk in the java environment
design patterns
but
you know just very like very intensely
into only
programming and then
from there
you know i think i just i finished my
master's program i would just i went had
an itch
and so then i heard about this brand new
thing called node.js where we were doing
javascript on the server and it was just
like
and they weren't using real development
tools like no eclipse people were just
using notepad plus plus the code it yeah
it was like the wild wild west and i was
like all right sign me up so
anyway i went to node and i haven't gone
back so so now if i just if i write like
a azure function or something it's
always almost always node.js
i did not know that is so
have you used
my i don't want to say modern.net but
like dot net latelyah
yes but not that often okay
i actually barely know it i know it's
it's i mean i yeah
which is what i'm trying to get to which
i'm trying to get to because i think a
lot of people will assume like you work
at microsoft you you work with a lot of
azure related things you have to know c
sharp and this is what i was trying to
like start start the conversation around
is
you can know different languages work
with different languages and find
opportunities to do that oh yeah it's
not a requirement i mean i use a mac
also
something a lot of people are like the
amount of people that ask
yeah a lot of people that ask like oh is
it taboo to use a mac
or um are you allowed to ask for a
different type of computer instead of
service and i'm like i think the
majority of people i won't say the
majority of people prefer it but i'm the
but most of my colleagues
i think have max i'm sort of the one
that's on a thinkpad on windows just
because it's my preference not because
we have to of course
yeah but i i a lot of it's like oh yeah
i get a lot of questions like oh yeah
you need to know.net i need to know c
sharp or powershell
um enabled i don't do i don't power snow
either
no powershell no no i mean
my role is customer facing i haven't
really gotten to that yet and so if a
customer needs help with something
then i'll help them with that we're just
we're meeting them where they are i'm
not going to be like oh oh dotnet i
can't don't you want to use node or or
whatever no so i'll just you know but
it's not something i'm strongest and
i'll probably have to reach out to one
of my teammates and be like hey can you
hop in on this part
yeah okay that's awesome and i think
another thing i wanted to ask you is you
know it looks like you've gone through a
couple of languages and you become
comfortable with them was it it's i'm
assuming it was easier like from your
first one that you picked up to you know
now you could pick up anything and it
you know your onboarding process is
probably yeah appreciate it
i think that was part of a benefit of
finishing school too because and this is
really like a style of learning thing
because going to class having that
environment having deadlines that really
helped me to focus
um and i kind of need that now again
earlier in career i could just pick up a
book and learn something and go do it
and i was better at focusing i'm not
very good at it now and so i kind of
need more structure and that became the
case more and more over the years so if
that's the way you learn that it might
help to go back to school if you're a
good self-learner if you're somebody who
can read blogs and books and focus and
push code to github and learn it that
way then
maybe you don't need that classroom
structure you can do an online class or
something yeah but going back to school
helped because i also too i think i got
the
computer science foundations that way
because if you're if you're just
teaching yourself something you're going
to pick up like a how to java in 30 days
book right yeah you're not going to pick
up a design patterns book and that's
something if you're learning java and
academic environment it's going to be
very design patterns heavy and then as
you're going through other people's code
you can kind of say like oh they're
using the command pattern here okay this
makes sense
like that kind of stuff because java
developers just love their patterns
and yes
yes
so i think that those foundations do
help there i you know i took a lot of
database foundations courses that come
up now occasionally i can just like
throw out a big word on a customerbut
yeah i mean but that i but you know
everybody's journey is different
obviously my journey is like
you know but i know people that they
just they knew what they wanted to do
they went to school they got a cs degree
in four years and
they went from there um other people
it's it's it's different we have
different perspectives which is great
do you
do you ever wish you could go back to to
that helpdesk software that you wrote
and rewrite it with everything that you
know now
wouldn't it be a cool project yeah well
to be honest it would be a power app
and i would be done with it in five
minutes
okay you know
really because i mean it was an access
database and it had it had some forms
and queries and all that
but yeah it was an internal only app
and it had a sql server database i think
ultimately first it was an access
database but then i learned sql server
and connected it to that i don't know
who gave me and helped us access to the
sql server but
anyway
um
so yeah i mean really yeah i do now
would be powerapp it'd be a really
simple one too and it would
actually probably probably better but
fun fact they only just let go of my app
like five years ago it spent 20 years in
production what
yeahyeah i still talk to the people i worked
with there and they're like oh yeah we
they just decided to sunset the help
desk app you know a couple years ago and
i'm like say what
so
and she said yeah you know an access
database it would get to like 40 000
records or so and it would slow down and
we would copy all those records into
another database and then we would you
know we would give ruin an hour to down
time where we copied the records out and
then start over
that's
that's quite the accomplishment for a
help desk
side
project
yeah yeah that's right that's awesome
yeah
so
um
that's how i got into cloud as well at
my helpdesk gig because i had like some
down time
and i would just hang out with the
infrastructure team just kind of
watching what they were doing
uh and then one day someone was like you
should get an aws certification and then
you know i'm well a couple years and
things more things happen but that's how
i ended up here but yeah help desk i
you i wouldn't say the requirements are
low
because
i don't think they are but it's a very
entry-level friendly gig
and for people who like you know with
non-traditional backgrounds and you know
i think it's just such an interesting
first step because the amount of things
like it's very high level but the amount
of like tech that you could potentially
get exposed to and people because you
could be like in my i guess it obviously
depends on the size of the company but
in my case i was working with everyone
from uh people on my team up to the cfo
cto ceo and sometimes i would just have
like casual conversations and then you
know that's networking as well
but anyway big big fan of help desk
but back to your story
so you know you get into
yeah
we get you get into you know
web and you say that's what you ended up
wanting to do more of when was your
first
sort of adventure with serverless and
when were you like oh i want this is
something i want to
dive deeper into
sure so i guess it's been
maybe eight to ten years ago that i
started with this this startup was like
a ten person startup and the idea was
that we would go to various companies
and just help them fix problems
so we might help them like let's say
they have a lot of people that like
developers and they need to inspire
developers we would bring in robots and
teach them iot
and we would teach them javascript and
the reason that we were so javascript
heavy is we felt like it helped to
democratize coding basically we felt
like javascript was really easy to learn
that both the front end and the back end
developers could could use it if you use
node.js so everyone you know sort of
across all the various groups were using
the same language we would use node with
nodebots for iot
and we would just basically go in
inspire the employees get everybody
excited
go through all the existing code and say
like oh this don't do this use this use
this start to talk to them about cloud
it was pretty exciting and so in order
to to stay on top of things in order to
be like these advisors we would have to
know all the latest stuff coming out so
we would have these
like smaller projects and so basically
the cto of the company was like hey i
think there's really like a thing here
with
serverless and aws lambda you know and
that was kind of before
that was kind of like the first real
fast that had kind of come out and so
you know so he was like can you explore
this so i put together a project it was
aws iot
and some like i think aws recognition
when it was super super brand new
lambda and like that was my first real
project and so i put together this um
detection system with a raspberry pi
and i had to write the lambdas for that
um and then i was like oh this is super
easy like this is great i'm writing like
so little code here
and
like it's so little code that there's
like less troubleshooting i just like
pushed this and it worked and
i was i was hooked
i was basically hooked because everyone
else in the company was very deep in
containers and kubernetes and it was
getting very infra heavy and i felt like
i was losing the development part of it
because i was spending so much time
worrying about
you know
where my container was
and so i was like oh i don't have to
care about where my container is i just
like i push this and it works and then i
started thinking more about it a little
more deeply like okay
well how does this now work if i have
this new tool like how do i chain things
together how do i do it safely because
now
i need now i need guard rails okay i did
it it's easy
now i need guardrails okay so how do i
introduce my
winter where's my cicd process
like things like that immediately i went
back to my roots of like okay this was
fun this is great i pushed a bunch of
stuff but yeah how do i like lock it
back down and so that's kind of then
that became my obsession so so you were
already happy well i guess not happy but
excited with developing with serverless
tools and such
back then
where i i can't imagine how that process
looked like back then because even now
there's still somewhat of a struggle
with things like debugging things like
security right in the service lan and i
can't imagine
what that had been like when things were
just getting started when aws
so when you got started was it only
lambda like that's the only fast around
yeah that was kind of what existed and
then then i think ibm had something and
then of course actual functions okay
yeah because it ibm uh bluemix and so
what i did is and that's that's also too
because my the startup i worked for
would had no
like alliances with any particular cloud
we were cloud agnostic
um and so we really had to kind of know
every cloud and so that so then i
started saying okay i built this on aws
but what does it look like in ibm cloud
was it like on google cloud what does it
look like on
microsoft um and so then i was doing a
lot of talks about
serverless in general and like the good
and bad of each platform and so
i was putting together this talk that
was like what's under the hood like what
actually happens in each cloud platform
for serverless and so i went out and i
started interviewing people from each
cloud and saying okay what's the good
bad and ugly like what is what's
actually happening here and when i
talked to microsoft to jeff holland at
the time
jeff was like who i mean i love jeff
jeff is great and i the first time i met
him first of all he stood up in a like a
meeting right away like he had no idea
who i was and i'm like hey hi
i'm a person and can i talk to you about
azure functions like how they actually
work and he's like sure when do you want
to meet this is great and so anyway he
showed me kind of how the runtimes were
open source
and about how you could containerize
things and i was just like this is cool
this just feels like the future where
serverless is not a black box okay but
yeah you can push code to an azure
function and it works but also
you can kind of dig in a little deeper
and then you can kind of like go out and
look at the docker containers and you
can kind of see what's happening and
then you can kind of understand how it
works and then once i get into that then
i was like oh wait
logic gaps like i don't think you know
no one really has anything that's quite
like this and now this is low code and
it's like building blocks and lego
blocks but it's still serverless you
know event grid that was also super
new and that was so anyway i guess i got
started to get really really into the
microsoft platform yeah that's when i
started building more on azure functions
so
does advocacy and i don't necessarily
mean
you know having the role advocate in in
your title but this advocacy and getting
into service for you kind of go hand in
hand so it seems like as you were
figuring these things out you know
diving into it more and more you were
also like giving talks and whatnot but
and i'm sure with these events and
whatnot that you were doing
you you got to hear a lot of different
opinions on people's you know people's
opinions on serverless and i'm curious
what did you have you seen that change
or was that like was it drastically
different when you started to where it
is now
um
so
the serverless community is interesting
and
i actually got into the community
because so first of all i am
just by nature somewhat introverted i
don't just naturally sign up and go i
just love to talk i love to give talks
it's a little bit of a struggle i still
get very stressed out about it but i do
like to teach
and i also i hate gatekeeping i hate
barriers i i want like everyone to have
the same opportunity
and so i also know that i represent a
you know a group of people that's not
you know prevalent in our industry and
my background is super weird and so i
want to evangelize that and say hey look
where i am like literally anybody can be
where i am i should not have ever gotten
that first health desk job that i did i
was so completely not qualified for it
but you know i thought and got it um
and so that was important to me and also
too and i worked for the startup i think
to the cto that startup was just like
basically like the parent that pushes
their kid in the deep end he was like oh
you don't feel comfortable talking too
bad
i booked your flight to san jose you're
speaking at this conference you know so
that was helpful too to have a have good
mentors and people to sort of build me
up and kind of push me out
and i felt like okay now i need to be
that person and also start helping other
people
um but
you know just sort of a shout out to
like the
a cloud guru people because they gave me
a free ticket to the serverless
conference austin i said talk that's
awesome
my talk was terrible that i submitted
but then they reached out and they were
like hey it's great you seem to just
talk what if we give you a ticket
so then i booked like an airbnb went to
austin met and met so many people in
that community
and then everyone was so great and it
was very welcoming and you know
everybody just was it was very inclusive
and yeah there were arguments but even
the arguments between people were not
hateful it was like it was like a
learning kind of argument even the
people that completely disagreed on
languages or definition of serverless it
was still it was like we were still so
separated away from the people who were
very focused on kubernetes that
even if we disagreed we still had this
one thing in common
and so i love i still love the
serverless community um and i loved i
think i spoke at three serverless comps
plus some other you know random
conferences so
you know a lot of these talks are still
out there if anybody wants to do some
googling or whatever i will definitely
check them out and then i'll have them
i'll have a couple of links for the next
stream to share with the chat and
whatnot but i want to talk now about
what you do at microsoft
maybe
maybe for what you do at microsoft let's
let's
dive into how you
started with us
or i guess here with us sounds weird but
at microsoft um
was it yeah you know tell me a little
bit about that was like that role and to
get to where we're at and then we can
dive in to where you're at now
sure um so i've basically been on the
sales side since i joined microsoft um
my very first manager at microsoft saw
one of my talks on linkedin
like he went to my linkedin profile
watched some of the videos i had posted
there and basically thought okay like
she could do pre-sales and we want to
get some people in on the team that kind
of know
you know other cloud platforms in
addition to
microsoft platform and so yeah so anyway
he uh he put me in the process to
to interview you know got me to apply
and
got the job my first role was a tsp
which is um like a it doesn't exist
anymore but it's like just a totally
pre-sales
you know position so basically like just
helping on the technical side so if a
customer comes to us and says like hey i
just really need help with like what
knowing what what logic apps is and
that's where i would come in and kind of
show them a little demo and and talk
about talk through um and then um i got
shipped around a little bit and then i
ended up in
my role now
two years ago yeah two years ago okay
which is the
global black belt team
which is to me the coolest roll out
their global black belt
and
i would love to know more about your
day-to-day
as well
what was the total so how long have you
been at microsoft for total
um almost
like maybe three and a half years now
okay okay yeah that's kind of still
recent i guess i don't i don't really
know because people don't really stick
around roles
pretty long so i feel like now
it it might seem like a forever time but
like you know a couple years ago would
have been like oh wow you're just
getting started or whatnot but okay so
now your global black belt
would love to know your day-to-day would
love to know how often you use
serverless in your role now or and then
i want to talk about
getting started in serverless for people
in chat
yeah sure
um so i will say one really cool thing
about working for microsoft this has
been true for for pretty much every team
i've worked for is that if you work in a
team your manager isn't like okay well
you'll be on my team forever you know
yeah so plan that they're always like
what's what's your next step
what are you gonna do after you leave
this team and you're like no i like it
here i'm going to stand like okay that's
great but what are you going to do next
like you know they like really within
microsoft everybody's thinking about
their future people that's why people
move around it's not because they hate
their teams but it's because as you grow
and learn you're kind of like well
actually i think i would be better on
this team
and then you know so really like on my
team it's more
deeply focused so whereas the rules i
was in before was a little bit more
broad so really it was everything
active whereas my background was more on
the serverless side and on the
integrations side so like you know api
management logic apps like those types
of services your service bus so i was
always kind of thinking about event
driven architectures and fasts and so
because i think i had a deeper knowledge
there it made more sense to come to the
black belt team where
it's still pre-sales
it's still i'm still talking to
customers all the time but it's more at
a deeper level like if they really want
to dig in super deep they want to know
about durable functions they want to
know about how azure functions works in
their architecture if they want to think
about sort of like some
they want to go over an architecture and
think kind of big picture and really dig
in deep that's more
my team we're kind of about sort of
helping them with their technical
decision
okay are you
still like are you building demos in
those kinds of things or is it more like
a discussion yes sometimes it just it
kind of depends on what what they need
sometimes it's really like if it's a
functions conversation it might be that
it's just not working as expected
or they just don't understand how it
pieces together because there's a lot of
terms there and they're like okay well
what's the difference between okay i've
got a service bus and i've got an event
grid and i've got an event hubs like
what are they what's the difference
between them how do i use them when do i
put a function in there when does a
function not make sense then whenever i
want a container app like those are
those are the types of questions that we
just we don't always answer in our
documentation right and so having
talking to like a real person to kind of
help you through that um and we do put
together examples demos pocs sort of
illustrate the point i think
um you know but i think i use functions
a lot
um i don't always have a lot of
discussions specifically on functions
it's usually a bigger architecture that
functions just happens to be a part of
yeah um i also work a lot with low code
so in like the sort of low code fusion
architectures where you've got a power
app that you want to connect to an api
then it makes sense to use functions
there because
functions is sort of the
it's sort of the lowest you know
functions are logic apps sort of the
lowest code place you can go in azure so
if you're if you're really comfortable
in something like powerapps but you're
like okay i want to go bigger i want to
connect i want to create now an api
and i want to connect to that from my
powerapp how do i do that and so then
you know then we can have a good
functions conversation and like how to
set up a function and
you know pick your link pick your
language any language and
we'll support you and you know show you
how to turn that into an api
so do
you
it's interesting you mentioned like the
pick your language thing so is it your
is your part of your role to kind of
just be flexible and be able to do
whatever it is that the customer needs
like you're not like oh this isn't
javascript that's i can't help you out
no yeah no never yeah i mean i don't
know i barely know python at all and one
of my customers is is very python heavy
and one of my teammates helps out a lot
with like various python specific issues
but a lot of things are
are pretty generic across functions and
so and the process is the same so
yeah and actually they've taught me
quite a bit about python working with
them
i've got i've got a couple of fun
questions that i would like to ask and
then we can dive into the how to getting
started with serverless but if you were
to recommend a programming language for
someone who wanted to get started in
just current day they want to learn how
to code and kickstart their career what
language would that be
yeah i would say javascript still
javascript okay interesting yeah okay
okay i i usually get python when i ask
that
but i guess it definitely yeah that's
probably because i don't know python
okay fair yeah
because i just that that wasn't a path i
went down um and i know in a lot of a
lot of academic programs python is like
the intro to program is python but for
me it was c and then i think visual
maybe
yeah vbscript or something okay
i think the one thing that javascript
i would say is sort of like a a benefit
is with it being web you can instantly
kind of see what you're doing
and i think when you're getting started
like
sort of grasping like back-end
development and things like that it's
more difficult especially if you like a
visual learning but i i personally don't
know
any javascript i don't dislike it or
anything like that it's kind of a like
joke but i say i'll never learn
javascript but it's more so i just
that's what i say about.net
how far can i go at microsoft with never
really learning.net yeah well you know
now there's things like blazer and
whatnot so you could do like front end
as well right but this you know it's at
the end of the day there's still some
javascript in there anyway but okay
interesting now
another thing i found cool that you
mentioned was you had an aws background
ended up here at microsoft
and
obviously we're we have azure different
cloud platform right did you feel like
what you knew with aws translated well
into kind of grabbing and getting
started with azure here
oh yeah definitely yeah i mean it is
different and honestly the um the fast
products across
clouds used to be a lot more similar i
think because i used to i used to use
serverless framework a lot and i used to
just deploy to all of them kind of using
the same
you know i'm actually wearing a
serverless
t-shirt today
and uh and so
it was they were all they were all kind
of look more similar every they've
diverged a lot sort of just based on
priorities and how they interact with
sort of other services within the cloud
and things but if i i still have stuff
running on aws um i still i mean i have
some early early twitter bots
and i've been running on lambda for
years i don't even think about it they
cost me no money so i just don't even
like think about it it's the same thing
with logic apps i have some very old
logic apps that are just doing what a
process is for me they've been sitting
out there kind of forever but yeah i
think that i think it really helped just
having the basis in any cloud platform i
think you know it helped me
you know and it's not any um
you know i guess and that's the sort of
the great thing about the serverless
community though too
um that community is pretty agnostic
yeah you know you would see you know aws
google and and azure people hanging out
together at the happy hour after
serverlessconf you know so it's really
more about the philosophy than the
specific
fast service so yeah the transition
wasn't wasn't hard for me i kind of
basically understood it's interesting to
hear that they used to be more similar
than they are now i didn't know that but
then my career in cloud is relatively
new but that's cool to know dude do you
and i agree with the like this like
serverless sort of that space is more so
i see them more focusing on building
tools or frameworks
that work on top of all clouds like you
know like serverless framework whatnot
um
very cool i i want to dive into
if you were to want to like learnnow is there like so what tools would
you recommend or is there a project that
you recommend or how what would that
journey look like
in 2022
um
so
i'm going to go down the azure path
basically and say i would
um
i'd use our i use azure's like our learn
platform basically and you mentioned the
cloud skills challenge i think that's a
good a good starting place to start with
learn.microsoft.com
go down the functions path
from there it can lead you in other
directions
you know maybe get on the logic apps
path
um but you can get from zero to having
something deployed pretty quickly i
think through the learn path so that's
that's what i how i would go
um
i think too i mean you know i know that
like
there's a lot of community stuff out
there too and i know that you know like
when you were involved in kind of like
the azure like the functions like
university and some of the other
projects yeah like yeah there's there's
a lot of that stuff out there that's
really good i mean obviously the content
for serverless september for like even
the last few years
um all of that's good i still i did we
had like a holiday one a couple years
ago too where it was like like the 25
days of serverless 25 days of serverless
yes yeah i still go back and look at all
my solutions because i was like wait i
did a solution like this years ago and
i'll go back and look at it you know
because i think i was pushing something
to
blob and then doing something else and i
was like let me just go find my code i
wrote before
um and then i had pushed at the github
but
yeah that's kind of how i would get
started um
i think within our docs there's a lot of
good quick starts too
so if you're somebody who you like just
read the docs i think you could read the
docs go through the quick starts
as well but i would say to try to push
some code as quickly as possible like
don't get analysis paralysis and feel
like oh well
i really need to like know the inner
workings of this super super well just
pick a language
and say i'm doing this language go find
the docs and just push something
and then you'll get that immediate
result like that immediate hello world
you'd be like oh i'm now a serverless
developer
where do i go from here
yeah the the especially like creating a
function i remember creating a function
in the portal
three years ago three or four years ago
and you know you can when it creates one
for you can instantly go into the
in portal editor you hit run and then
you have the hello welcome azure
functions message or maybe it was a
different message back then i can't
remember
um
and i was like whoa
it's
yeah obviously it's a very simple api
but it it's already fully running and
what was interesting with my sort of
journey into serverless was i didn't
have any
traditional talk
development like i wasn't like building
stuff to run like like desktop apps on
like virtual machines or anything like
that my first introduction in like in a
production kind of um like in work like
where i was getting paid for was through
azure functions um
so when people ask me now like oh hey
like i want to learn programming like is
server looks like a way that i could
sort of like approach it could i build
projects and
what's that and i'm like absolutely for
projects like
we all know forest brazil big fan um the
cloud resume challenge is
the cloud resume challenge is a a
project that i recommend anybody who
wants to get into cloud
to do
and you're
back
in this and you know if that's your
first introduction to programming you're
deploying a serverless application
whether that be functions whether it be
lambda
i can't remember what the gcp one is um
i want to say it's like cloud functions
or something like that the name of
google cloud's uh fast yeah um
but it's cool that now it's sort of a
way where like oh if you want to become
a service developer and that you want
that to be your first thing it could
very much be like your first thing
uh i don't know if you have any like
things for people to look out
yeah i love what you're suggesting what
you've suggested a few times where like
you were mentioning the cloud skills
challenge or even though the what the
heck and saying okay you can put this on
your resume i love that idea yeah put
some stuff in github
like if you do these samples put them on
like try to get them all in github try
to learn how to you know push to github
i would say also vs code vs code is your
friend yes vs code you have i mean you
can use vs code for any of the cloud
platforms so even if you don't go down
the azure functions road you go down a
lambda or you know a google cloud road
you can you can actually just use the
extensions for vs code for any of those
as well so like if i'm working on a
functions app but then i'm like oh i
need to update this
lambda or whatever i just i i stay in vs
code the whole time
and so and then you can also push to
github from vs code
so
that that's that's another thing and
then like yeah like you're saying
think of it all as like projects that
you you know link them put them on
github link them on your linkedin put
them on twitter hey i did this this cool
thing and for the most part
most part you'll have a lot of cool
people like when saying hey that's a
really cool project i love that i mean i
have a lot of just zany stuff on my
github i've had very few
bad
you know actors that have you know made
comments very few for the most part i've
had
good people encouraging me and then good
people telling the actors to take a hike
yeah no i think for me it's been like
that too i remember actually that 25
days of serverless that you mentioned
was the first sort of
i guess challenge that i kind of
interacted with microsoft cloud
advocates and this was back in 2019 and
my my entire experience was like wow
everyone's like so so helpful and so
nice and so supportive so now it's kind
of my turn to give back if anyone is out
there posting solutions and whatnot if
you use the hashtag serverlessseptember
i'm gonna be able to find it showcase it
help you out answer any questions and
whatnot um so you know get on that i
think it's it's it's great to get hands
on and whatnot and i think as advice i
think you mentioned this but
don't get stuck
and like all these decisions
and all these things that you could
potentially like oh should i do this
should i do that should i do this the
cool like you mentioned the cool thing
about servers it's one of the easiest
sort of spaces in cloud to like if you
have an idea implement it in maybe try
lambda and and
uh i don't know python and then maybe
try functions with node or then try a
different cloud with a different
language like your goal is to more so
you know figure out that yeah you can
build these things the tool doesn't
really matter because like linda
mentioned you might end up on a team
where it's not about the language it's
not about the tool it's about you being
able to present these solutions to
customers and if you're so stuck on like
one specific stack you're probably going
to limit yourself
right
yeah i think so
yeah i mean don't be don't be afraid
about you know being don't don't try to
be perfect
i mean that's that's a great thing i
mean you can there's so many guard rails
really i think with any of the fast
services and when serverless in general
you can get something working
really quickly and then once it's
working then you can start thinking
about okay how to make this better how
do i add on other services how do i how
do i do more
but you can get something up really
quickly and you get that immediate like
feel good
yeah when you when you deploy something
and you like you go to the portal and
you click on the link and it's like you
know your
application is running it's like oh
great great
yeah
absolutely before we end i want to go
through the chat um because i just got
lost in the conversation and see if
there's anything
that we we can answer
uh or we give some shout outs here
uh let me go to the top here let me grab
some but yeah the chat's been very
active so
uh i appreciate that from everyone here
boris is saying hey hey boris jj saying
hello hello
ivana's here as well thank you everyone
for for hanging out and saying hi
someone said shots each time not gonna
endorse that but i think this was when i
said you know
make a tally for each time we say
serverless
yeah yeah we should have said drink some
water yeah oh yeah i would have been
very hydrated
absolutely um
looks like we got someone tuning in from
texas that is awesome
and let's scroll down here oh we got
someone else saying hey that's awesome
let me see someone says here 21 years
with the same company i'm a dinosaur
i would say
everyone's journey is completely their
own and if you feel like you're happy at
a place and you don't want to leave why
would you leave right don't let anyone
else's i mean and that doesn't dictate
what you do in your free time too and
exactly
yeah exactly i mean yeah like my journey
obviously i was all over the place but i
spent
more than 10 years in government you
know and sort of like public sector
and so and a lot of people are like oh i
don't i hate public sector it's not
innovative but i did a lot of like
really cool innovative stuff and i had
the opportunity to go back to school and
that sort of thing too yeah when i
worked for the government so
um yeah everyone's everyone's different
yeah i i like what you said there that
it doesn't dictate what you do in your
free time you could always learn
something new do something else on your
free time
um absolutely love that let's see is
there any course for python yes there is
a lot of python content on ms learn
there's like there's dot-net there's
python i know there's rust there's
javascript
uh what else is on there
a bunch more everyone must check that
out
ms learn is and i know
i'm biased but i really think it is an
underrated
tool for learning because it's guided
learning and i know you realize early on
that
sort of having something guide you along
that like school curriculums do is
really helpful for some people and ms
learn
has that for like a bunch of different
things so be sure to check that out um
people are thanking us now vana says
thank you
uh
saying thank you as well
great shame i think this was awesome
linda thank you so much uh we're at
about time here yeah it's so great
talking to you and yeah i mean people
can find us on
twitter and you know occasionally on
linkedin i don't answer my linkedin
messages but you can tag me i'll see it
well make sure to drop your twitter and
the yeah in my github i mean you can
everything
there's all kinds of
stuff on there
too so oh here's one last thing i want
to add here there will be a serverless
guide for getting started with functions
for python out in the next couple of
days for serverless september awesome
no better time than this this is awesome
maybe i will do it and i'll learn python
there we go
that's awesome uh but yes uh linda thank
you so much i don't know this is a
question for our production team i don't
know if we want to throw something up at
the end of this stream sometimes they do
sometimes they have like the survey
thing or not
but if so
feel free to throw that up now if not
we're going to say bye and
sign off and thank everyone i will be
back live
next thursday at the same time with more
serverless what am i talking about next
week i can't remember i think it might
be the project that got me promoted that
was a serverless project or i have one
with my colleague liam where we're
talking about devops and serverless it's
one of those but this month is packed
with serverless stuff here at the
reactor so be sure to stay tuned and
that's it linda thank you so much for
hanging out and i will see you in the
next one great time all right see ya bye
everybody